# NOTE: to use this, rename this file to default.conf and put in /etc/keyd/

# Advanced use of capslock as a triple function key:
#
# - when 'capslock' is tapped (pressed + released), it behaves as ESC key
#
# - when 'capslock' is held, and used in combination with another key, it
#   behaves like a 'ctrl' key modifier (just like xcape)
#
# - when 'capslock' is held, and the 'space' key is tapped, we enter a 3rd
#   state for "VIM mode" where hjkl keys become arrow keys until capslock
#   is released.
#
[ids]
*

[main]

capslock = overload(ctrl_vim, esc)

# ctrl_vim modifier layer; inherits from 'Ctrl' modifier layer

# Maps capslock to escape when pressed and control when held.
# capslock = overload(control, esc)
# Remaps the escape key to meta and ESC (hitting the regular ESC Key)
# is burned in to my brain. Cant avoid it to hit. 

esc = overload(meta, esc)

# #### HOME ROW MOD 
# Not recommended for gamers ;)

# a = overloadt(control, a, 150)
# s = overloadt(shift, s, 150)
# d = overloadt(meta, d, 150)
# f = overloadt(alt, f, 150)
# j = overloadt(alt, j, 150)
# k = overloadt(meta, k, 150)
# l = overloadt(shift, l, 150)
# ; = overloadt(control, ;, 150)
# v = overloadt(altgr, v, 150)
# m = overloadt(altgr, m, 150)


# Maped the Right Hand to sort of avoid the first row 
; = overloadt(control, ;, 150)
' = overloadt(meta, ', 150)
tab = overloadt(meta, tab, 150)


# leftshift = oneshot(shift)
# rightshift = oneshot(shift)
[ctrl_vim:C]

space = swap(vim_mode)

# vim_mode modifier layer; also inherits from 'Ctrl' modifier layer

[vim_mode:C]

h = left
j = down
k = up
l = right
# forward word
w = C-right
# backward word
b = C-left



